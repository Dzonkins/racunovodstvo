<?php

/**
 * @file
 * Hook implementations for "remove_reset_password" module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function remove_reset_password_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.remove_reset_password':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t("Remove'Reset your password' intends to improve the user experience for the user login page by providing an option for admins to hide the 'Reset your password' button. This module is especially useful for enhancing security and customization options on the login page.") . '</p>';
      $output .= '<h3>' . t('Uses') . '</h3>';
      $output .= '<dl>';
      $output .= '<dt>' . t('Features') . '</dt>';
      $output .= '<dd>' . t("The basic functionality of this module is to allow administrators to hide the 'Reset your password' button on the user login page. This feature is particularly useful in scenarios where admins want to simplify the login interface or enhance security by limiting password reset options. The module offers flexibility by providing options to either hide the full local tab or just the reset password option.") . '</dd>';

      $output .= '<dt>' . t('Post-Installation') . '</dt>';
      $output .= '<dd>' . t("After installing the module, navigate to Configuration -> People -> Remove Reset password. You can access the configuration form at `/admin/config/people/reset-password-form-settings`. From here, enable the options based on your preferences to hide the full local tab or just the reset password option.") . '</dd>';

      $output .= '<dt>' . t('Additional Requirements') . '</dt>';
      $output .= '<dd>' . t("This module does not require any additional modules, libraries, or APIs to work beyond Drupal core.") . '</dd>';

      $output .= '<dt>' . t('Recommended Modules/Libraries') . '</dt>';
      $output .= '<dd>' . t("There are no specific recommended modules or libraries that enhance this module's functionality. Still, it can be used in conjunction with other security and user management modules to improve overall site security.") . '</dd>';

      $output .= '<dt>' . t('Similar Projects') . '</dt>';
      $output .= '<dd>' . t("While there may be other modules that manage user login and security features, Remove ' Reset your password' is unique in its specific focus on providing an option to hide the 'Reset your password' button, offering a straightforward solution for administrators who need this functionality.") . '</dd>';

      $output .= '<dt>' . t('Supporting this Module') . '</dt>';
      $output .= '<dd>' . t("If you would like to support the development of this module, please consider contributing to the issue queue or providing feedback and suggestions for improvement.") . '</dd>';

      $output .= '</dl>';
      return $output;
  }
}

/**
 * Implements hook_menu_local_tasks_alter().
 */
function remove_reset_password_menu_local_tasks_alter(&$data, $route_name) {
  $config_factory = \Drupal::service('config.factory');
  $hide_button = $config_factory->get('remove_reset_password.settings')->get('remove_reset_password_button');
  $hide_label = $config_factory->get('remove_reset_password.settings')->get('remove_all_local_tabs');

  if ($route_name == 'user.login'  && isset($data['tabs'][0])) {
    if ($hide_label) {
      // Remove all tabs from user login form.
      foreach ($data['tabs'][0] as $key => $tab) {
        $data['tabs'][0][$key]['#access'] = FALSE;
      }
    }
    elseif ($hide_button) {
      $data['tabs'][0]['user.pass']['#access'] = FALSE;

    }
  }
}
